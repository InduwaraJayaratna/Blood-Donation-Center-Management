/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.sql.*;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.*;
import  control.*;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import static view.Reg.gender;

/**
 *
 * @author User
 */
public class ADData extends javax.swing.JFrame {
Connection con;
    public ADData() {
        initComponents();
        
        String url="jdbc:mysql://localhost/life";
        String user="root";
        String pass="";
        
        try{
            con=DriverManager.getConnection(url,user,pass);
        }
        catch(Exception e){
            System.err.println("Error : "+e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtA = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtU = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtB = new javax.swing.JTextField();
        btnA = new javax.swing.JButton();
        btnU = new javax.swing.JButton();
        btnD = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnBack2 = new javax.swing.JButton();
        date_chooser = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Serif", 3, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Appointment ID", "User ID", "Center", "Date", "Blood Type"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, 652, 476));

        jLabel1.setFont(new java.awt.Font("Serif", 3, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Appointment ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 129, -1, 36));

        txtA.setEditable(false);
        getContentPane().add(txtA, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 132, 390, 36));

        jLabel2.setFont(new java.awt.Font("Serif", 3, 22)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("User ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 186, -1, 36));

        txtU.setEditable(false);
        getContentPane().add(txtU, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 189, 390, 36));

        jLabel3.setFont(new java.awt.Font("Serif", 3, 22)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Center");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 243, -1, 36));
        getContentPane().add(txtC, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 246, 390, 36));

        jLabel4.setFont(new java.awt.Font("Serif", 3, 22)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Date");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 300, -1, 36));

        jLabel5.setFont(new java.awt.Font("Serif", 3, 22)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Blood Type");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 354, -1, 36));
        getContentPane().add(txtB, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 354, 390, 36));

        btnA.setBackground(new java.awt.Color(204, 0, 0));
        btnA.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        btnA.setForeground(new java.awt.Color(255, 255, 255));
        btnA.setText("Donated");
        btnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAActionPerformed(evt);
            }
        });
        getContentPane().add(btnA, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 94, 55));

        btnU.setBackground(new java.awt.Color(204, 0, 0));
        btnU.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        btnU.setForeground(new java.awt.Color(255, 255, 255));
        btnU.setText("Update");
        btnU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUActionPerformed(evt);
            }
        });
        getContentPane().add(btnU, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 94, 55));

        btnD.setBackground(new java.awt.Color(204, 0, 0));
        btnD.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        btnD.setForeground(new java.awt.Color(255, 255, 255));
        btnD.setText("Delete");
        btnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDActionPerformed(evt);
            }
        });
        getContentPane().add(btnD, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, 94, 55));

        btnBack.setBackground(new java.awt.Color(204, 0, 0));
        btnBack.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Refresh");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 420, 100, 55));

        btnBack1.setBackground(new java.awt.Color(204, 0, 0));
        btnBack1.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(255, 255, 255));
        btnBack1.setText("<<< Back to Menu");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 510, 210, 55));

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 510, 100, 50));

        btnBack2.setBackground(new java.awt.Color(204, 0, 0));
        btnBack2.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        btnBack2.setForeground(new java.awt.Color(255, 255, 255));
        btnBack2.setText("Report");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 510, 100, 55));
        getContentPane().add(date_chooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, 240, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AppointmentData.png"))); // NOI18N
        jLabel7.setText("jLabel7");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 610));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUActionPerformed

    private void btnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDActionPerformed
        try {
            try{
                if("".equals(txtA.getText())){
            JOptionPane.showMessageDialog(new JFrame(), "Appointment ID is require", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if("".equals(txtU.getText())){
            JOptionPane.showMessageDialog(new JFrame(), "User ID is require", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if("".equals(txtC.getText())){
            JOptionPane.showMessageDialog(new JFrame(), "Center is require", "Error", JOptionPane.ERROR_MESSAGE);
        }
            else if(date_chooser.getDate() == null){
             JOptionPane.showMessageDialog(new JFrame(), "Date is required", "Error", JOptionPane.ERROR_MESSAGE);
         }
        else if("".equals(txtB.getText())){
            JOptionPane.showMessageDialog(new JFrame(), "Blood Type is require", "Error", JOptionPane.ERROR_MESSAGE);
        }else {
                    int a_id = Integer.parseInt(txtA.getText());
                    String user_id = txtU.getText();
                    String center=txtC.getText();
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    String dobText = dateFormat.format( date_chooser.getDate());
                    String blood_type=txtB.getText();
                    

                    CADDataDelete ccd = new CADDataDelete();
                    ccd.delete_apoointment(a_id);
                    
                }
            }
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(new JFrame(), ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } 
        catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnDActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        String sql="SELECT * FROM appointment";
        
        try{
            PreparedStatement pst=con.prepareStatement(sql);
            ResultSet rs=pst.executeQuery();
            DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            while(rs.next()){
                model.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
            }
        }
        catch(Exception e){
            System.err.println("Error : "+e.getMessage());
        }
            txtA.setText("");
            txtU.setText("");
            txtC.setText("");
            date_chooser.setDate(null);
            txtB.setText("");
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        this.setVisible(false);
        new AHome().setVisible(true);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAActionPerformed
        String ap_id,user_id,center,date,blood_type;
        try{
        if("".equals(txtA.getText())){
            JOptionPane.showMessageDialog(new JFrame(), "Appointment ID is require", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if("".equals(txtU.getText())){
            JOptionPane.showMessageDialog(new JFrame(), "User ID is require", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if("".equals(txtC.getText())){
            JOptionPane.showMessageDialog(new JFrame(), "Center is require", "Error", JOptionPane.ERROR_MESSAGE);
        }
               else if(date_chooser.getDate() == null){
             JOptionPane.showMessageDialog(new JFrame(), "Date is required", "Error", JOptionPane.ERROR_MESSAGE);
         }
        else if("".equals(txtB.getText())){
            JOptionPane.showMessageDialog(new JFrame(), "Blood Type is require", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            ap_id=txtA.getText();
            user_id=txtU.getText();
            center=txtC.getText();
            date_chooser.getDate();
            blood_type=txtB.getText();
            String query = "INSERT INTO donation(a_id, user_id, center, date, blood_type) VALUES(?, ?, ?, ?, ?)";
            PreparedStatement preparedStatement= DBConnection.getMyConnection().prepareStatement(query); 
            preparedStatement.setString(1, ap_id);
            preparedStatement.setString(2, user_id);
            preparedStatement.setString(3, center);
            
            // Convert the util.Date to sql.Date
         if (date_chooser.getDate() != null) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String dobText = dateFormat.format( date_chooser.getDate());
            preparedStatement.setString(4, dobText);
    } else {
        // Handle the case where the date is null
        JOptionPane.showMessageDialog(null, "Date must not be null");
        return;
    }
            
            preparedStatement.setString(5, blood_type);
           int rowsAffected = preparedStatement.executeUpdate();
        
            
        // Clear form fields
       if (rowsAffected > 0) {
            // Clear form fields
            txtU.setText("");
            txtA.setText("");
            txtC.setText("");
            date_chooser.setDate(null);
            txtB.setText("");

            JOptionPane.showMessageDialog(null, "Data Inserted successfully!");
        } 
       else {
            JOptionPane.showMessageDialog(new JFrame(), "Error in database operation", "Error", JOptionPane.ERROR_MESSAGE);
       }
          
        }
     }
          catch (SQLException e) {
    // Handle SQL exception
    e.printStackTrace();
    }

        catch(Exception e){
           System.out.println("Error! " + e.getMessage()); 
        }
        
    }//GEN-LAST:event_btnAActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        model.setRowCount(0);
        
        txtU.setText("");
        txtA.setText("");
        txtC.setText("");
        date_chooser.setDate(null);
        txtB.setText("");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    try{    
        int i = jTable1.getSelectedRow();
        TableModel m1=jTable1.getModel();
        txtA.setText(m1.getValueAt(i,0).toString());
        txtU.setText(m1.getValueAt(i,1).toString());
        txtC.setText(m1.getValueAt(i,2).toString());
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        // Get the date from the 4th column (assuming it's a valid date string)
        String dateFromColumn = m1.getValueAt(i, 3).toString();

        // Parse the date string to java.util.Date
        java.util.Date selectedDateUtil = dateFormat.parse(dateFromColumn);

        if (selectedDateUtil != null) {
            java.sql.Date selectedDateSql = new java.sql.Date(selectedDateUtil.getTime());
            date_chooser.setDate(selectedDateSql);
        
        txtB.setText(m1.getValueAt(i,4).toString());
        }
    }
        catch(Exception e)
                {
                  JOptionPane.showMessageDialog(null, e.getMessage());
                }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        try {
            JasperDesign jasperdesign=JRXmlLoader.load("F:\\DSE224\\EAD\\Activity\\CourseWork\\Coursework\\src\\Appointments.jrxml");
            JRDesignQuery designquery=new JRDesignQuery();
            designquery.setText("select * from appointment");
            jasperdesign.setQuery(designquery);
            JasperReport report=JasperCompileManager.compileReport(jasperdesign);
            JasperPrint print=JasperFillManager.fillReport(report,null,DBConnection.getMyConnection());
            JasperViewer.viewReport(print);  
        } 
        catch (JRException ex) {
            Logger.getLogger(ADData.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnBack2ActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnA;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnD;
    private javax.swing.JButton btnU;
    private com.toedter.calendar.JDateChooser date_chooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtA;
    private javax.swing.JTextField txtB;
    private javax.swing.JTextField txtC;
    private javax.swing.JTextField txtU;
    // End of variables declaration//GEN-END:variables
}
