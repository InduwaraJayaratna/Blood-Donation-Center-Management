
package view;
import model.*;
import control.*;
import java.awt.*;
import java.sql.*;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.DBConnection;
import java.lang.*;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import static view.DLogin.pass;
import static view.Reg.gender;
import java.lang.*;
import javax.swing.*;
import java.awt.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class DFeedback extends javax.swing.JFrame {
String name,feedback;
    /**
     * Creates new form DFeedback
     */
    public DFeedback() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtN = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtF = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lbl3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Stencil", 0, 24)); // NOI18N
        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, -1, -1));

        txtN.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNActionPerformed(evt);
            }
        });
        getContentPane().add(txtN, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 582, -1));

        jLabel4.setFont(new java.awt.Font("Stencil", 0, 24)); // NOI18N
        jLabel4.setText("Feedback");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, 30));

        txtF.setColumns(20);
        txtF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtF.setRows(5);
        jScrollPane1.setViewportView(txtF);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 243, 582, 134));

        jButton1.setBackground(new java.awt.Color(102, 0, 0));
        jButton1.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("<<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 453, 260, 76));

        jButton2.setBackground(new java.awt.Color(102, 0, 0));
        jButton2.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Move Forward>>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 453, 260, 76));

        lbl3.setText("jLabel3");
        getContentPane().add(lbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 550, 40, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/feedbacks.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 590));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        new Home().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        
    }//GEN-LAST:event_formWindowLostFocus

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    String fullName = txtN.getText().trim();
    String feedback = txtF.getText().trim();
        Component frame = null;

        // Regular expression for letters-only validation
        String lettersOnlyRegex = "^[a-zA-Z\\s]+$";
    try{
         if ("".equals(txtN.getText())) {
        JOptionPane.showMessageDialog(new JFrame(), "Full Name is required", "Error", JOptionPane.ERROR_MESSAGE);
         } 
         else if ("".equals(txtN.getText())) {
        JOptionPane.showMessageDialog(new JFrame(), "Name required", "Error", JOptionPane.ERROR_MESSAGE);
    } else if ("".equals(txtF.getText())) {
        JOptionPane.showMessageDialog(new JFrame(), "Feedback is required", "Error", JOptionPane.ERROR_MESSAGE);
    }
    else{
        
        int user_id = Integer.parseInt(lbl3.getText());
        String query = "INSERT INTO feedbacks (user_id, name, feedbacks) VALUES (?, ?, ?)";

         PreparedStatement preparedStatement = DBConnection.getMyConnection().prepareStatement(query); 
         preparedStatement.setInt(1, user_id);
         preparedStatement.setString(2, txtN.getText());
         preparedStatement.setString(3, txtF.getText());

    int rowsAffected = preparedStatement.executeUpdate();

    if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(null, "Feedback submission successful!");
        this.dispose();
        new Home().setVisible(true);
    } else {
        // No rows affected, handle accordingly
        System.out.println("No rows affected. User ID not found or feedback not submitted.");
    }
    }

        } catch (SQLException e) {
    // Handle SQL Exception
        JOptionPane.showMessageDialog(new JFrame(), "Error in SQL operation: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
         e.printStackTrace();

        } catch (NumberFormatException e) {
    // Handle NumberFormatException when parsing user_id
        JOptionPane.showMessageDialog(new JFrame(), "Invalid User ID: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();

        } catch (Exception e) {
    // Handle other exceptions
    JOptionPane.showMessageDialog(new JFrame(), "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
}

        try {
         Statement st1 = DBConnection.getMyConnection().createStatement();
         name = txtN.getText();
         feedback = txtF.getText();
    
        String queryN = "SELECT name, user_id FROM user WHERE email = '" + DLogin.email + "';";
        ResultSet rs = st1.executeQuery(queryN);
    
         while (rs.next()) {
        txtN.setText(rs.getString("name"));
        lbl3.setText(String.valueOf(rs.getInt("user_id")));
    }
    } catch (SQLException e) {
    // Handle SQL Exception
    System.out.println("Error in formWindowOpened: " + e.getMessage());
    e.printStackTrace();
    } catch (Exception e) {
    // Handle other exceptions
    System.out.println("Error in formWindowOpened: " + e.getMessage());
    e.printStackTrace();
}


    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        int notFound=0;
        try {
            Statement st1 = DBConnection.getMyConnection().createStatement();
            name = txtN.getText();
            feedback = txtF.getText();
            
           String queryN = "SELECT name,user_id FROM user WHERE email= '"+DLogin.email+"';";
       
            ResultSet rs = st1.executeQuery(queryN);
            while(rs.next()){
                txtN.setText(rs.getString("name"));
                lbl3.setText(String.valueOf(rs.getInt("user_id")));
            }
               
        }catch(Exception e){
           System.out.println("Error!" + e.getMessage()); 
        }
    }//GEN-LAST:event_formWindowOpened

        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DFeedback().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl3;
    private javax.swing.JTextArea txtF;
    private javax.swing.JTextField txtN;
    // End of variables declaration//GEN-END:variables
}
